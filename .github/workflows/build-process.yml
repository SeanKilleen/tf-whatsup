# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Build Process

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

env:
  CODE_LOCATION: src/
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x
      - name: Setup NuGet
        uses: NuGet/setup-nuget@v1
        with:
          nuget-api-key: ${{ secrets.NUGET_API_KEY }}
          nuget-version: "5.x"
      - name: Restore dependencies
        run: dotnet restore
        working-directory: "${{env.CODE_LOCATION}}"
      - name: Restore tools
        run: dotnet tool restore
        working-directory: "${{env.CODE_LOCATION}}"
      - name: Output Anticipated Version Number
        run: |
          VERSION=$(dotnet minver -t v -v e)
          echo "$VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_ENV
        working-directory: "${{env.CODE_LOCATION}}"
      - name: Build
        run: dotnet build --no-restore
        working-directory: "${{env.CODE_LOCATION}}"
      - name: Test
        run: dotnet test --no-build --verbosity normal
        working-directory: "${{env.CODE_LOCATION}}"
      - name: Pack
        run: dotnet pack --no-build --verbosity normal
        working-directory: "${{env.CODE_LOCATION}}/TFWhatsUp.Console"
      - name: Save Artifact
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v3
        with:
          name: nuget-package
          path: "**/*.nupkg"
      - name: Publish
        if: github.ref == 'refs/heads/main'
        working-directory: "${{env.CODE_LOCATION}}/TFWhatsUp.Console/nupkg"
        run: nuget push **/*.nupkg -Source 'https://api.nuget.org/v3/index.json'
      - name: Create GitHub Release With Assets
        if: github.ref == 'refs/heads/main'
        uses: softprops/action-gh-release@v1
        id: create_release
        with:
          tag_name: "v${{env.VERSION}}"
          draft: false
          prerelease: false
          fail_on_unmatched_files: true
          generate_release_notes: true
          files: "**/*.nupkg"
